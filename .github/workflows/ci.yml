name: aiida-castep

on: [push, pull_request]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        python: ['3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Upgrade pip
        run: |
          pip install --upgrade pip
          pip --version
      - name: Install aiida-castep
        run: pip install -e ".[testing,pre-commit]" && pip freeze
      - name: Run pre-commit
        run: echo "SKIPED" #pre-commit run --all-files || ( git diff; git status; exit 1; )

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[docs]
    - name: Build docs
      run: cd docs && make

  tests:
    needs: [pre-commit]
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      AIIDA_WARN_v3: 1
    services:
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install system dependencies
        run: |
          curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
          sudo apt update
          sudo apt install locate
          sudo updatedb
          sudo apt install postgresql
      - name: Upgrade pip
        run: |
          pip install --upgrade pip
          pip --version
      - name: Install Tox
        run: pip install tox
      - name: Install Coveralls
        if: ${{ matrix.python }} == '3.8'
        run: pip install coveralls
      - name: Install AiiDA 2.x version
        run: pip install aiida-core~=2.0
      - name: Install aiida-castep
        run: pip install -e ".[testing]" && pip freeze
      - name: Remove dot in Python version for passing version to tox
        uses: frabert/replace-string-action@master
        id: tox
        with:
          pattern: '\.'
          string: ${{ matrix.python }}
          replace-with: ''
      # - name: Run tox
      #   run: tox -e py${{ steps.tox.outputs.replaced }}-aiida_castep
      - name: Run pytest
        run: pytest
      - name: Run coverage from coverage-python by running pytest yet again
        if: ${{ matrix.python }} == '3.8'
        run: pytest --cov-report=xml --cov-append --cov=aiida_castep
      - name: Upload coverage to Codecov
        if: ${{ matrix.python }} == '3.8'
        uses: codecov/codecov-action@v1.0.13
        with:
          name: aiida-castep
          fail_ci_if_error: false

  build-n-publish:

    needs: [pre-commit, docs, tests]

    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Build
        run: |
          pip install wheel
          python3 setup.py sdist bdist_wheel

      - name: Publish distribution üì¶ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution üì¶ to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}